# psmoveinput configuration file

# Lines starting with '#' are comments
# Spaces, tabs and empty lines are ignored

# pid file location
# PID_FILE = ~/psmoveinput.pid

# log file location
# LOG_FILE = ~/psmoveinput.log

# log level
# 0 : fatal
# 1: error
# 2: info
#LOG_LEVEL = 1 

# move coeffs
MOVE_COEFF_X = 0.1
MOVE_COEFF_Y = 0.1

# operation mode:
# standalone - connect to PSMove directly
# client - run as moved client
#MODE = standalone

# timeout between two consecutive controller data queries (ms)
# POLL_TIMEOUT = 20
# timeout between two consecutive controller connection attempts (ms)
# CONN_TIMEOUT = 3000
# disconnect timeout specifies how long controller is considered connected
# after last piece of data received from it (s)
# DISCONNECT_TIMEOUT = 7
# controller LED update timeout
# LED_UPDATE_TIMEOUT = 4000
# gesture report timeout
# GESTURE_TIMEOUT = 600

# move threshold: minimal mouse movement (in pixels) reported by psmoveinput 
# MOVE_THRESHOLD = 0
# gesture threshold: minimal controller movement (in pixel equivalent), which
# triggers gesture report
# GESTURE_THRESHOLD = 100
#
# Note that changing POLL_TIMEOUT affects mouse pointer pixel offset calculated by psmoveinput:
# controller_gyroscope_value * poll_timeout * move_coeff.
# In the same way changing GESTURE_TIMEOUT affects pixel offset, which is tested against
# GESTURE_THRESHOLD to decide, whether to report gesture event or not.
# When changing either of these timeouts, consider changing corresponding threshold values
# as well.

# mapping between PSMove controller buttons and keys reported by psmoveinut when they are pressed
# supported keys:
# KEY_A - KEY_Z
# KEY1 - KEY0
# KEYF1 - KEY_F12
# KEY_ESC
# KEY_MINUS
# KEY_EQUAL
# KEY_BACKSPACE
# KEY_TAB
# KEY_LEFTBRACE
# KEY_RIGHTBRACE
# KEY_ENTER
# KEY_LEFTCTRL
# KEY_RIGHTCTRL
# KEY_SEMICOLON
# KEY_APOSTROPHE
# KEY_GRAVE
# KEY_LEFTSHIFT
# KEY_RIGHTSHIFT
# KEY_BACKSLASH
# KEY_COMMA
# KEY_DOT
# KEY_SLASH
# KEY_KPASTERISK
# KEY_LEFTALT
# KEY_RIGHTALT
# KEY_SPACE
# KEY_CAPSLOCK
# KEY_NUMLOCK
# KEY_SCROLLOCK
# KEY_SYSRQ
# KEY_LEFTMETA
# KEY_RIGHTMETA
# KEY_HOME
# KEY_PAGEUP
# KEY_LEFT
# KEY_RIGHT
# KEY_END
# KEY_DOWN
# KEY_PAGEDOWN
# KEY_INSERT
# KEY_DELETE
# KEY_MUTE
# KEY_VOLUMEDOWN
# KEY_VOLUMEUP
# KEY_PAUSE
# KEY_STOP
# KEY_PLAYPAUSE
# KEY_BACK
# KEY_PAUSE
# BTN_MOUSE
# BTN_LEFT
# BTN_RIGHT
# BTN_MIDDLE
# MWHEEL_UP
# MWHEEL_DOWN
#
# special key handled by psmoveinput itself; causes controller to be disconnected
# disconnect
#
# special move trigger key
# if some PSMove button is mapped to this key, cursor movements are reported
# only when the button is pressed and not reported when it is released
# move_trigger
#
# special gesture trigger key
# if some PSMove button is mapped to this key, gestures are reported
# only when the button is pressed and not reported when it is released
# gesture_trigger

# key map example:
PSBTN_MOVE = BTN_LEFT
PSBTN_T = move_trigger
PSBTN_TRIANGLE = BTN_RIGHT
PSBTN_CIRCLE = KEY_ESC
PSBTN_SQUARE = MWHEEL_UP
PSBTN_CROSS = MWHEEL_DOWN
PSBTN_PS = disconnect
PSBTN_SELECT = KEY_VOLUMEUP
PSBTN_START = KEY_VOLUMEDOWN

# buttons prefixed with PSBTN_1 belong to the second controller
PSBTN_1_MOVE = KEY_SPACE
PSBTN_1_PS = disconnect
PSBTN_1_T = gesture_trigger
# gestures are detected only for the second controller
GESTURE_UP = KEY_UP
GESTURE_DOWN = KEY_DOWN
GESTURE_RIGHT = KEY_RIGHT
GESTURE_LEFT = KEY_LEFT
